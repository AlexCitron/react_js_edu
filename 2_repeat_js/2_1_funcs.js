const a = 5;
const b = 7;

/* Function expression 
Function expression (функциональное выражение) в JavaScript — это способ создания функции, при котором она создаётся внутри выражения и сохраняется в переменную.
let myFunction = function () {};
*/

const calcFE = function (num1, num2) {
  return num1 + num2;
};

console.log(calcFE(a, b));

/* Function declaration 
Объявление состоит из ключевого слова function, за которым следует обязательное имя функции, списка параметров в круглых скобках и фигурных скобок, ограничивающих основной код. 
function myFunction () {};
*/

function calcFD() {
  return a + b;
}

console.log(calcFD());

/* Anonymous function 
это функция, которая не имеет имени. В отличие от именованных функций, анонимные создаются для конкретных задач и обычно используются в ограниченном контексте.
Анонимные функции в JavaScript объявляются с помощью ключевого слова function и круглых скобок (). Также существует краткий синтаксис с использованием стрелочных функций: () => { // Тело функции}
*/

console.log(
  (() => {
    return a + b;
  })()
);

/* Arrow function 
— это альтернативный синтаксис для создания функций, представленный в стандарте ES6 (ECMAScript 2015).
(параметры) => { тело функции } 
*/

let res = (n1, n2) => n1 + n2;
console.log(res(a, b));
